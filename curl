/**
     * 执行curl操作
     * @param $url
     * @param string $type
     * @param string $data
     * @param bool $decode
     * @param int $timeout
     * @return array|bool|mixed|string
     * @author xiaoqicheng
     * @date 2019-05-08
     * @time 16:58
     */
    function doCurl($url, $type = 'get', $data = '', $decode = true, $timeout = 5)
    {
        try {
            $ch = curl_init();    // 初始化CURL句柄
            curl_setopt($ch, CURLOPT_TIMEOUT, $timeout);//设置超时6秒钟
            curl_setopt($ch, CURLOPT_URL, $url); //设置请求的URL
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); // 设为TRUE把curl_exec()结果转化为字串，而不是直接输出
            curl_setopt($ch, CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4);
            if ($type == 'post') {
                curl_setopt($ch, CURLOPT_POST, 1); //启用POST提交
                is_array($data) && $data = http_build_query($data);
                curl_setopt($ch, CURLOPT_POSTFIELDS, $data); //设置POST提交的字符串
            }

            $header = array('Content-Type: application/json');
            curl_setopt($ch, CURLOPT_HTTPHEADER, $header);

            $document = curl_exec($ch); //执行预定义的CURL
            //        die($document);die;
            $info = curl_getinfo($ch, CURLINFO_HTTP_CODE); //得到返回信息的特性
            curl_close($ch);

            if ($info >= 200 && $info < 300) {
                if ($decode) {
                    return json_decode($document, true);
                }
                return $document;
            } else {
                return array("code" => "500", "result" => array(), "msg" => "请求service失败");
            }
        } catch (Exception $e) {
            log_error("执行curl失败 err:{$e->getMessage()} data:" . json_encode([
                    'url'  => $url,
                    'type' => $type,
                    "data" => json_encode($data)
                ]));
            return array("code" => "500", "result" => array(), "msg" => "请求service失败");
        }
    }
